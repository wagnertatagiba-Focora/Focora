name: Focora CI/CD (Android Focus)

on:
  push:
    branches:
      - main
      - develop
      - fix/*
  pull_request:
    branches:
      - main
      - develop

jobs:
  build_and_test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Generate mocks
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Analyze code
        run: flutter analyze --no-fatal-infos

      - name: Run unit and widget tests
        run: flutter test --coverage

      - name: Upload test coverage (if token available)
        if: ${{ secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/lcov.info

  e2e_tests:
    name: End-to-End Tests
    runs-on: macos-latest
    continue-on-error: true # Permitir que o pipeline continue mesmo se E2E falhar

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Generate mocks
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Run E2E tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          script: flutter drive --target=test_driver/app.dart
        continue-on-error: true

  build_android_release:
    name: Build Android Release
    runs-on: ubuntu-latest
    needs: [build_and_test] # N√£o depende mais dos E2E para n√£o bloquear
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Generate mocks
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build APK
        run: flutter build apk --release

      - name: Build AppBundle
        run: flutter build appbundle --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload AppBundle artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-appbundle
          path: build/app/outputs/bundle/release/app-release.aab

  deploy_firebase:
    name: Deploy to Firebase App Distribution
    runs-on: ubuntu-latest
    needs: build_android_release
    if: github.ref == 'refs/heads/main' && secrets.FIREBASE_TOKEN != ''

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download AppBundle artifact
        uses: actions/download-artifact@v3
        with:
          name: release-appbundle

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase App Distribution
        run: |
          firebase appdistribution:distribute app-release.aab \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --release-notes "üöÄ Release autom√°tico da branch main - Build #${{ github.run_number }}" \
            --groups "testers" \
            --token ${{ secrets.FIREBASE_TOKEN }}

  deploy_google_play:
    name: Deploy to Google Play (Internal Testing)
    runs-on: ubuntu-latest
    needs: build_android_release
    if: github.ref == 'refs/heads/main' && github.event.inputs.production_deploy == 'true'
    # Este job s√≥ roda quando acionado manualmente

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download AppBundle artifact
        uses: actions/download-artifact@v3
        with:
          name: release-appbundle

      - name: Deploy to Google Play Internal Testing
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: ${{ secrets.PACKAGE_NAME }}
          releaseFiles: app-release.aab
          track: internal
          status: completed

  # Job separado para iOS quando os segredos da Apple estiverem dispon√≠veis
  build_ios_release:
    name: Build iOS Release (quando Apple secrets estiverem dispon√≠veis)
    runs-on: macos-latest
    needs: [build_and_test]
    if: github.ref == 'refs/heads/main' && secrets.APP_IDENTIFIER != '' && secrets.APPLE_ID != ''

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Generate mocks
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build iOS
        run: flutter build ios --release --no-codesign

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: build/ios/iphoneos/Runner.app

  # Workflow de notifica√ß√£o
  notify_completion:
    name: Notify Build Completion
    runs-on: ubuntu-latest
    needs: [build_android_release, deploy_firebase]
    if: always()

    steps:
      - name: Notify Success
        if: needs.build_android_release.result == 'success'
        run: |
          echo "‚úÖ Build do Focora conclu√≠do com sucesso!"
          echo "üì± APK e AppBundle gerados"
          echo "üöÄ Deploy para Firebase App Distribution realizado"

      - name: Notify Failure
        if: needs.build_android_release.result == 'failure'
        run: |
          echo "‚ùå Build do Focora falhou"
          echo "üîç Verifique os logs para mais detalhes"
